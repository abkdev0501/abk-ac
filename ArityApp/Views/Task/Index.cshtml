@using Arity.Data.Helpers;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Users";
}

<div class="breadcomb-area">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcomb-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="notika-icon notika-form"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.MasterAdmin)
                                    {
                                        <h2>Your Tasks</h2>
                                        <p>List of your tasks</p>
                                    }
                                    else
                                    {
                                        <h2>All Tasks</h2>
                                        <p>List of Task</p>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-3">
                            <div class="breadcomb-report">
                                <button id="btnAddInvoiceEntry" onclick="AddUpdateTask(0)" data-toggle="tooltip" data-placement="left" class="btn"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb area End-->
<div class="modal animated fade" id="modelTask" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-large">
        <div class="modal-content">
            <div class="modal-header" style="margin-bottom:35px;">
                <h3>Add/Update Task</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- Data Table area Start-->
<div class="data-table-area">
    <div class="container">
        <div class="row">

            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="data-table-list">
                    <div class="basic-tb-hd">
                        @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.MasterAdmin)
                        {
                            <h2>Your Tasks</h2>
                            <p>Below are the list of your tasks.</p>
                        }
                        else
                        {
                            <h2>All Tasks</h2>
                            <p>Below are the list of all tasks.</p>
                        }
                    </div>

                    <div class="date-filter">

                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>From</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="FromDate" class="form-control" value="@(((DateTime)ViewBag.FromDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>To</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="ToDate" class="form-control" value="@(((DateTime)ViewBag.ToDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                            <button type="button" class="btn btn-success notika-btn-success waves-effect" id="btnFilterGrid">Search</button>
                        </div>

                    </div>
                    <div class="table-responsive">
                        <table id="tblUsers" class="table table-striped" style="width:100%;">
                            <thead>
                                <tr>
                                    <th style="width:12%;">Title</th>
                                    <th style="width:12%;">Assign To</th>
                                    <th style="width:8%;">client</th>
                                    <th style="width:8%;">Description</th>
                                    <th style="width:5%;">DueDate</th>
                                    <th style="width:10%;">Status</th>
                                    <th style="width:10%;">User comment</th>
                                    <th style="width:5%;">Chargeable</th>
                                    <th style="width:5%;">Created On</th>
                                    <th style="width:5%;"></th>
                                    <th style="width:5%;"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#liHome").removeClass("active");
        $("#liTask").addClass("active");
       table =  $('#tblUsers').DataTable({
            "ajax": function (data, callback, settings) {
                $.ajax({
                    url: '@Url.Action("LoadTask","Task")',
                    type: "GET",
                    dataType: "json",
                    data: {
                        from: $("#FromDate").val(),
                        to: $("#ToDate").val()
                    },
                    beforeSend: function (xhrObj) {
                        $("#loading").show();
                    }
                    })
                    .done(function (data, textStatus, jqXHR) {
                        callback(data);
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        Notification('Error! ', ''+errorThrown+'', 'danger');
                    })
                    .always(function (data, textStatus, jqXHR) {
                        $("#loading").hide();
                    });
            },
            "language": {
                "emptyTable": "No tasks found"
           },
            dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        title: 'Excel',
                        text:'Export to excel'
                    }
                ],
           "columns": [
                { "data": "TaskName" },
                { "data": "UserName" },
                { "data": "ClientName" },
                { "data": "Description" },
                { "data": "DueDateString" },
                 {
                    "orderable": false,
                    "data": null,
                     "render": function (data, type, full) {
                        if(data.StatusString ==="Assigned")
                            return '<button class="btn btn-info notika-btn-danger waves-effect">'+data.StatusString+'</button>';
                        else if (data.StatusString === "InProgress")
                            return '<button class="btn btn-warning notika-btn-danger waves-effect">' + data.StatusString + '</button>';
                        else if (data.StatusString === "Cancel")
                            return '<button class="btn btn-danger notika-btn-danger waves-effect">' + data.StatusString + '</button>';
                        else if (data.StatusString === "OnHold")
                            return '<button class="btn btn-purple notika-btn-danger waves-effect">' + data.StatusString + '</button>';
                        else if (data.StatusString === "Pending")
                            return '<button class="btn btn-deeppurple notika-btn-danger waves-effect">' + data.StatusString + '</button>';
                        else if (data.StatusString === "Unknown")
                            return '<button class="btn btn-black notika-btn-danger waves-effect">' + data.StatusString + '</button>';
                        else
                            return '<button class="btn btn-success notika-btn-danger waves-effect">'+data.StatusString+'</button>';
                    }
                },
               { "data": "UserComment" },
                {
                    "orderable": false,
                    "data": null,
                    "render": function (data, type, full) {
                        if (data.IsChargeble) {
                            return 'Chargeble';
                        }
                        else {
                             return 'No';
                        }
                    }
                },
                { "data": "CreatedOnString" },
                {
                    "orderable": false,
                    "data": null,
                    "render": function (data, type, full) {
                            return '<button class="btn waves-effect " onclick="AddUpdateTask(' + data.TaskId + ')"><i class="fa fa-edit" aria-hidden="true"></i></button>';
                    }
               },
                {
                    "orderable": false,
                    "data": null,
                    "render": function (data, type, full) {
                            return '<div class="dialog-pro dialog">' +
                            '<button class="btn btn-info" onclick="DeleteTask(' + data.TaskId + ')" id="sa-warning">'+
                            '<i class="fa fa-trash" aria-hidden="true"></i>' +
                            '</button> </div>';
                    }
                }
           ],
            "order": []
       });

         $("#btnFilterGrid").click(function () {
    table.ajax.reload();
});
       });

        function AddUpdateTask(id) {
              $("#loading").show();
            $.ajax({
                url: '@Url.Action("AddUpdateTask", "Task")',
                dataType: "html",
                type: "GET",
                data: { id: id },
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#loading").hide();
                    $("#modelTask .modal-body").html(response);
                    $("#modelTask").modal('toggle');
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Something went wrong, Please try again', 'danger');
                }
            });
        }

        function downloadPayment(id) {
            window.open("/home/GenerateReciept/"+id);
        }

         function DeleteTask(taskId) {
            swal({
			title: "Are you sure?",
			text: "You will not be able to recover this task",
			type: "warning",
			showCancelButton: true,
			confirmButtonText: "Delete",
            }).then(function () {
                $("#loading").show();
                $.ajax({
                    url: '@Url.Action("DeleteTask", "Task")',
                    type: "POST",
                    data: { taskId: taskId },
                    cache: false,
                    success: function (response) {
                        table.ajax.reload();
                        $("#loading").hide();
			            swal("Deleted!", "Task has been deleted.", "success");
                    },
                    error: function (error) {
                        $("#loading").hide();
                        Notification('', 'Internal error occured, Please try again', 'danger');
                    }
                });
		});

        }
    </script>
}
