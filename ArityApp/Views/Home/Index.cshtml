@using Arity.Data.Helpers;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
}

<style>
    /*td.details-control {
        background: url('/Content/images/details_open.png') no-repeat center center;
        cursor: pointer;
    }*/

    .date-filter .filter-date-button {
        width: 14%;
    }

    /*tr.shown td.details-control {
        background: url('/Content/images/details_close.png') no-repeat center center;
    }*/

    .child-heading {
        padding-left: 5%;
        font-weight: 600;
        padding: 2% 2% 2% 5%;
        font-style: italic;
    }
</style>

<div class="breadcomb-area">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcomb-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="notika-icon notika-form"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    <h2>Invoice History</h2>
                                    <p>List of invoices</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-3">
                            <div class="breadcomb-report">
                                @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                {
                                    <button id="btnAddInvoiceImport" onclick="ImportInvoice()" data-toggle="tooltip" data-placement="left" class="btn btn-default notika-btn-default waves-effect"><i class="fa fa-upload"></i> Import</button>
                                    <button id="btnAddInvoiceEntry" onclick="AddUpdateInvoiceEntry(0,0)" data-toggle="tooltip" data-placement="left" class="btn"><i class="fa fa-plus"></i> Add</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<!-- Breadcrumb area End-->
@if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
{
    <div class="modal animated fade" id="modelInvoiceEntry" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-large">
            <div class="modal-content">
                <div class="modal-header" style="margin-bottom:35px;">
                    <h3>Add/Update Invoice entry</h3>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">

                </div>
                <div class="modal-footer">

                </div>
            </div>
        </div>
    </div>

    <div class="modal animated fade" id="modelUploadFile" role="dialog">
        <div class="modal-dialog modals-default">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Import Invoice </h3>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-dismissible alert-model" style="display:none;width:100%;">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        <h4><i class="icon fa notify-icon"></i> <span id="Alertmessage"></span> </h4>
                    </div>
                    <span id="UploadErrors" style="display:none;color:red;"></span>
                    <form action="@Url.Action("ImportInvoice", "Home")" class="dropzone dropzone-nk" id="dropzoneJsForm">
                        <div class="dz-message needsclick">
                            <i class="fa fa-cloud-upload" style="font-size:35px"></i><br />
                            <br />
                            <h4> Drop files here or click to upload.</h4>
                        </div>
                    </form>
                    <div style="width:60%;margin-left:30%;padding: 25px 0 5px;">
                        <div class="form-group">
                            <a href="/Content/SampleTemplate/ImportInvoice_Sample.xls" download="ImportInvoiceSampleTemplate" id="downloadSample" style="display: inline-block;vertical-align:bottom;margin-left:10px;">Download sample template</a>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div style="width:100%;text-align:center;">
                        <button class="btn btn-primary" type="submit" id="btnFileUpload"><i class="fa fa-upload"></i> Import</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal animated fade" id="modalTracking" role="dialog">
        <div class="modal-dialog modals-default">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Add/Update Tracking</h3>
                    <button type="button" class="close" data-dismiss="modal" id="btnCloseChangePassword">&times;</button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
}
<!-- Data Table area Start-->
<div class="data-table-area">
    <div class="container">
        <div class="row">

            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="data-table-list">
                    <div class="basic-tb-hd">
                        <h2>Invoice History</h2>
                        <p>Below are invoice history.</p>
                        <p style="display:none;border:1px dashed #00c292;" id="amount-div">
                            <span style="display:block;"><b>Total Amount : <span class="total-amount"></span></b></span>
                        </p>
                    </div>

                    <div class="date-filter">
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>From</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="FromDate" class="form-control bk-date" value="@(((DateTime)ViewBag.FromDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>To</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="ToDate" class="form-control bk-date" value="@(((DateTime)ViewBag.ToDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                            <button type="button" class="btn btn-success notika-btn-success waves-effect" id="btnFilterGrid">Search</button>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                            <button type="button" class="btn btn-success notika-btn-success waves-effect" id="btnExportPDF" onclick="downloadPDF()">Export PDF</button>
                        </div>
                        @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                        {
                            <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                                <button type="button" class="btn btn-success notika-btn-success waves-effect" id="btnExportExcel" onclick="downloadInvoice()">Export Excel</button>
                            </div>
                        }
                    </div>
                    <div class="table-responsive">
                        <table id="tblInvoiceHistory" class="table table-striped" style="width:100%;">
                            <thead>
                                <tr>
                                    <th style="width:5%;"></th>
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        <th style="width:5%;"></th>
                                    }
                                    <th style="width:5%;"><input type="checkbox" class="chkSelectAll" /></th>
                                    <th style="width:5%;">Invoice#</th>
                                    <th style="width:5%;">User name</th>
                                    <th style="width:20%;">Name</th>
                                    <th style="width:20%;">Address</th>
                                    <th style="width:15%;">Company</th>
                                    <th style="width:10%;">Total Amount</th>
                                    <th style="width:7%;">Date</th>
                                    <th style="width:7%;">Year</th>
                                    <th style="width:7%;">Remarks</th>
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        <th style="width:7%;">Group</th>
                                        <th style="width:7%;">Added By</th>
                                        <th style="width:5%;">Add Entry</th>
                                        <th style="width:5%;">Tracking</th>
                                        <th style="width:5%;">Delete</th>
                                    }
                                </tr>
                            </thead>
                            <tbody></tbody>
                            <tfoot>
                                <tr>
                                    <th style="width:5%;" no-serach></th>
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        <th style="width:5%;" no-serach></th>
                                    }
                                    <th style="width:5%;" no-serach><input type="checkbox" class="chkSelectAll" /></th>
                                    <th style="width:5%;">Invoice#</th>
                                    <th style="width:5%;">User name</th>
                                    <th style="width:20%;">Name</th>
                                    <th style="width:20%;">Address</th>
                                    <th style="width:15%;">Company</th>
                                    <th style="width:10%;">Total Amount</th>
                                    <th style="width:7%;">Date</th>
                                    <th style="width:7%;">Year</th>
                                    <th style="width:7%;">Remarks</th>
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        <th style="width:7%;">Group</th>
                                        <th style="width:7%;">Added By</th>
                                        <th style="width:5%;display:none;">Add Entry</th>
                                        <th style="width:5%;display:none;">Tracking</th>
                                        <th style="width:5%;display:none;">Delete</th>
                                    }
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function () {
        $("#liInvoice").addClass("active");
        $("#liHome").removeClass("active");
        $('#tblInvoiceHistory tfoot th').each( function () {
            var title = $(this).text();
            $(this).html('<input type="text" style="display:' + ($(this).attr("no-serach") == undefined ? "inline-block" :"none") + '" placeholder="Search ' + title + '" />');
        });
        table = $('#tblInvoiceHistory').DataTable({
            "ajax": function (data, callback, settings) {
                $.ajax({
                    url: '@Url.Action("LoadInvoiceHistory","Home")',
                    type: "GET",
                    dataType: "json",
                    data: {from:""+$("#FromDate").val()+"",to:""+$("#ToDate").val()+""},
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function (xhrObj) {
                        $("#loading").show();
                    }
                })
                    .done(function (data, textStatus, jqXHR) {
                        callback(data);
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        Notification('Error! ', '' + errorThrown + '', 'danger');
                    })
                    .always(function (data, textStatus, jqXHR) {
                        $("#loading").hide();
                    });
            },
            "language": {
                "emptyTable": "No invoice found"
            },
            dom: 'Blfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        title: 'Excel',
                        text:'Export to excel'
                    }
            ],
             "responsive": true,
             "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            "columns": [
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    'render': function (data, type, full, meta) {
                        return '<button class="btn btn-success notika-btn-success waves-effect btn-particular"><i class="fa fa-plus-circle"></i></button>';
                    }
                },
               @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                {

               @:{
               @: "className": 'tracking-control',
               @: "orderable": false,
               @: "data": null,
               @: 'render': function (data, type, full, meta) {
               @:             return '<button class="btn btn-primary btn-log"><i class="fa fa-plus-circle"></i></button>';
               @:         }
               @:},
               }
                {
                    "orderable": false,
                    "data": null,
                    "render": function (data, type, full) {
                        return '<input type="checkbox" class="chkSelect" data-id="'+data.InvoiceId+'" data-total="'+data.Amount+'" data-toggle="tooltip" \>';
                    }
               },
                { "data": "InvoiceNumber" },
                { "data": "Username" },
                { "data": "FullName" },
                { "data": "Address" },
                { "data": "CompanyName" },
                { "data": "Amount" },
                { "data": "CreatedDateString" },
                { "data": "Year" },
                { "data": "Remarks" },

                @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                {
                    @:{ "data": "GroupName" },
                    @:{ "data": "CreatedByString" },
        @:{
            @:"orderable": false,
            @:"data": null,
            @: "render": function (data, type, full) {
            @: if (data.AddedBy == @Convert.ToInt32(SessionHelper.UserTypeId) || @Convert.ToInt32(SessionHelper.UserTypeId) == @((int)Arity.Service.Core.UserType.MasterAdmin) ) { return '<button class="btn waves-effect" onclick="AddUpdateInvoiceEntry(0,' + data.InvoiceId + ')"><i class="fa fa-plus-circle" aria-hidden="true"></i></button>' } else { return ""; };
            @:}
        @:},
        @: {
            @:"orderable": false,
            @:"data": null,
            @:"render": function (data, type, full) {
            @: if (data.AddedBy == @Convert.ToInt32(SessionHelper.UserTypeId) || @Convert.ToInt32(SessionHelper.UserTypeId) == @((int)Arity.Service.Core.UserType.MasterAdmin) ) { return '<button class="btn waves-effect" onclick="AddUpdateInvoiceTracking(0,' + data.InvoiceId + ')"><i class="fa fa-commenting-o" aria-hidden="true"></i></button>'; } else { return ""; }
              @:}
        @:},
        @:{
        @:"orderable": false,
        @:"data": null,
        @:"render": function (data, type, full) { console.log(data.AddedBy);
        @:    if (data.AddedBy == @Convert.ToInt32(SessionHelper.UserTypeId) || @Convert.ToInt32(SessionHelper.UserTypeId) == @((int)Arity.Service.Core.UserType.MasterAdmin) ) { return '<div class="dialog-pro dialog">' +
        @:                    '<button class="btn btn-info" onclick="DeleteInvoice(' + data.InvoiceId + ')" id="sa-warning">'+
        @:                    '<i class="fa fa-trash" aria-hidden="true"></i>' +
        @:                    '</button> </div>'; }
        @:    else { return ''; }
        @:      }
        @:}

}

            ],
            "order": [[5, "desc"]],
            initComplete: function () {
                // Apply the search
                this.api().columns().every( function () {
                    var that = this;
 
                    $('input', this.footer()).on('keyup change clear', function () {
                        if ( that.search() !== this.value ) {
                            that
                                .search( this.value )
                                .draw();
                        }
                        });
                });
            }
        });

        Dropzone.options.dropzoneJsForm = {
            autoProcessQueue: false,
            acceptedFiles: ".xlsx,.xls",
            maxFiles: 1,
            parallelUploads: 1,
            maxFilesize: 25,
            addRemoveLinks: true,
            timeout: 180000,
            init: function () {
                var submitButton = document.querySelector("#btnFileUpload");
                var myDropzone = this; //closure
                this.on("maxfilesexceeded", function (file) {
                     Notification('', 'You can only upload single file at a time', 'danger');
                    this.removeFile(file);
                });
                this.on("error", function (file, message, xhr) {
                    if (message === "You can't upload files of this type.") {
                        Notification('', 'You can import .xls and .xlsx files only', 'danger');
                        this.removeFile(file);
                    }
                });
                this.on("sending", function (file, xhr, formData) {
                    formData.append("TemplateId", $("#TemplateId").val());
                    $("#loading").show();
                });
                this.on("complete", function (file) {
                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                        if (file.status == 'error') { }
                        else if (file.xhr.response != null && file.xhr.response === "error") {
                            Notification('', 'An error occurred while importing invoice. Please try again', 'danger');
                            this.removeFile(file);
                        }
                        else if (file.xhr.response != null && file.xhr.response === "template_id_null") {
                            Notification('', 'Please select template", "alert-danger', 'danger');
                        }
                        else {
                            if (file.xhr.response.split('$').length > 1 && file.xhr.response.split('$')[1] != "") {
                                $("#UploadErrors").html(file.xhr.response.split('$')[1]);
                                $("#UploadErrors").show();
                                Notification('', 'Please resolved all errors to import invoice and receipts', 'danger');
                            } else {
                                Notification('', 'File imported successfully!', 'success');
                            }
                            this.removeFile(file);
                             table.ajax.reload();
                        }
                        $("#loading").hide();
                    }
                });
                submitButton.addEventListener("click", function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    var isValid = true;
                    if (myDropzone.getUploadingFiles().length === 0 && myDropzone.getQueuedFiles().length === 0) {
                        isValid = false;
                         Notification('', 'Please select file', 'danger');
                    }
                    if (isValid) {
                        myDropzone.processQueue();
                    }
                });
            }
        };


        $('#tblInvoiceHistory tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        var row = table.row(tr);

        if ( row.child.isShown() ) {
            // This row is already open - close it
            row.child.hide();
            tr.removeClass('shown');
            tr.find(".details-control").find(".btn-particular").html("<i class='fa fa-plus-circle'></i>");

        }
        else {
            // Open this row
            row.child( format(row.data()) ).show();
            tr.addClass('shown');
            tr.find(".details-control").find(".btn-particular").html("<i class='fa fa-minus-circle'></i>");
        }
       });

        $('#tblInvoiceHistory tbody').on('click', 'td.tracking-control', function () {
        var tr = $(this).closest('tr');
        var row = table.row(tr);

        if ( row.child.isShown() ) {
            row.child.hide();
            tr.removeClass('shown');
            tr.find(".tracking-control").find(".btn-log").html("<i class='fa fa-plus-circle'></i>");
        }
        else {
            row.child( trackingLog(row.data()) ).show();
            tr.addClass('shown');
            tr.find(".tracking-control").find(".btn-log").html("<i class='fa fa-minus-circle'></i>");
        }
    });

        $("#btnFilterGrid").click(function () {
             table.ajax.reload();
        });

        $(".chkSelectAll").change(function () {

            $(".chkSelect").each(function ()
            {
                $(this).prop("checked",$(".chkSelectAll").is(":checked"));
            });
            CalculateTotal();
        });

        $("body").on("change",".chkSelect",function () {
            CalculateTotal();
        });
    });

        function getDateTime() {
            return {
                 from: $("#FromDate").val(),
                 to: $("#ToDate").val()
            }
        }

        function format(invoice) {
          var html = '<div class="child-heading">All particulars information</div><table cellpadding="5" cellspacing="0" border="0" style="margin-left:5%;width:90%;    border: 1px solid #eee;margin-bottom: 2%;"><tr><th>Name</th><th>Ammount</th><th>Year</th><th>Date</th><th>Added by</th><th></th><th></th></tr>';
             $.ajax({
                        url: "@Url.Action("GetInvoiceParticulars", "Home")",
                        method: "GET",
                        data: { invoiceId: invoice.InvoiceId },
                        async:false,
                        dataType: "json"
                    }).done(function (response) {
                        if (response != null) {
                            if (response.length <= 0) {
                                html += '<tr>' +
                                    '<td colspan="5" align="center">Particulars not found</td>' +
                                    '</tr>';
                            }
                            else {
                                $(response).each(function (i, data) {
                                    html += '<tr>' +
                                        '<td>' + data.SFParticulars + '</td>' +
                                        '<td>' + data.Amount + '</td>' +
                                        '<td>' + data.Year + '</td>';

                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        @:if (data.AddedBy == @SessionHelper.UserTypeId || @((int)Arity.Service.Core.UserType.MasterAdmin) === @SessionHelper.UserTypeId)
                                        @: {
                                          @:html += '<td>' + data.CreatedDateString + '</td><td>'+data.CreatedByString+'</td><td><i style="cursor:pointer;" class="fa fa-edit" onclick="AddUpdateInvoiceEntry(' + data.InvoiceParticularId + ',' + data.InvoiceId + ')"></i></td><td><i style="cursor:pointer;" class="fa fa-trash" onclick="RemvoeParticulars(' + data.InvoiceParticularId + ')"></i></td>';
                                        @:}
                                        @:else
                                        @: {
                                          @:html += '<td>' + data.CreatedDateString + '</td><td colspan="3">'+data.CreatedByString+'</td>';
                                        @:}

                                        }
                                    else {
                                         @:html += '<td>' + data.CreatedDateString + '</td><td colspan="3">'+data.CreatedByString+'</td>';
                                    }
                                    html +='</tr>';
                                    });
                            }

                        }
                    }).fail(function (jqXHR, textStatus) {
                        console.log("Request failed: " + textStatus);
                });
            html += '</table>';
            return html;
        }

        function trackingLog(invoice) {
          var html = '<div class="child-heading">Invoice tracking information</div><table cellpadding="5" cellspacing="0" border="0" style="margin-left:5%;width:90%;    border: 1px solid #eee;margin-bottom: 2%;"><tr><th>Information</th><th>Date</th><th>Added By</th><th></th><th></th></tr>';
             $.ajax({
                        url: "@Url.Action("GetInvoiceTrackingInformation", "Home")",
                        method: "GET",
                        data: { invoiceId: invoice.InvoiceId },
                        async:false,
                        dataType: "json"
                    }).done(function (response) {
                        if (response != null) {
                            if (response.length <= 0) {
                                html += '<tr>' +
                                    '<td colspan="5" align="center">No logs found</td>' +
                                    '</tr>';
                            }
                            else {
                                $(response).each(function (i, data) {
                                    html += '<tr>' +
                                        '<td>' + data.Comment + '</td>' ;

                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        @:if (data.CreatedBy == @SessionHelper.UserTypeId)
                                        @: {
                                          @:html += '<td>' + data.CreatedAt + '</td><td>' + data.AddedBy + '</td><td><i style="cursor:pointer;" class="fa fa-edit" onclick="AddUpdateInvoiceTracking(' + data.TrackingId + ',' + data.InvoiceId + ')"></i></td><td><i style="cursor:pointer;" class="fa fa-trash" onclick="RemvoeTracking(' + data.TrackingId + ')"></i></td>';
                                        @:}
                                        @:else if(@((int)Arity.Service.Core.UserType.MasterAdmin) === @SessionHelper.UserTypeId)
                                        @: {
                                          @:html += '<td>' + data.CreatedAt + '</td><td>' + data.AddedBy + '</td><td><i style="cursor:pointer;" class="fa fa-edit" onclick="AddUpdateInvoiceTracking(' + data.TrackingId + ',' + data.InvoiceId + ')"></i></td><td><i style="cursor:pointer;" class="fa fa-trash" onclick="RemvoeTracking(' + data.TrackingId + ')"></i></td>';
                                        @:}
                                         @:else
                                        @: {
                                          @:html += '<td>' + data.CreatedAt + '</td><td colspan="3">' + data.AddedBy + '</td>';
                                        @:}
                                        }
                                    else {
                                         @:html += '<td>' + data.CreatedAt + '</td><td colspan="3">' + data.AddedBy + '</td>';
                                    }
                                    html +='</tr>';
                                    });
                            }

                        }
                    }).fail(function (jqXHR, textStatus) {
                        console.log("Request failed: " + textStatus);
                });
            html += '</table>';
            return html;
        }

        function downloadInvoice() {
            var invoiceIds = "";
            $(".chkSelect").each(function () {
                if ($(this).is(":checked")) {
                    invoiceIds = invoiceIds + $(this).attr("data-id") + ",";
                }
            });
            if (invoiceIds === "") {
                Notification('', 'Please select atleast one invoice', 'danger');
                return;
            }
                window.open("/home/GenerateInvoice/" + invoiceIds);
        }

        function downloadPDF() {
            var invoiceIds = "";
            $(".chkSelect").each(function () {
                if ($(this).is(":checked")) {
                    invoiceIds = invoiceIds + $(this).attr("data-id") + ",";
                }
            });
            if (invoiceIds === "") {
                Notification('', 'Please select atleast one invoice', 'danger');
                return;
            }
                window.open("/home/GeneratePDF/" + invoiceIds);
        }

        function DeleteInvoice(InvoiceID) {
            swal({
			title: "Are you sure?",
			text: "You will not be able to recover this invoice",
			type: "warning",
			showCancelButton: true,
			confirmButtonText: "Delete",
            }).then(function () {
            console.log(InvoiceID);
                $("#loading").show();
                $.ajax({
                    url: '@Url.Action("DeleteInvoice", "Home")',
                    type: "POST",
                    data: { invoiceId: InvoiceID },
                    cache: false,
                    success: function (response) {
                        table.ajax.reload();
                        $("#loading").hide();
			            swal("Deleted!", "Your Invoice has been deleted.", "success");
                        //Notification('', 'Invoice deleted succesfully', 'success');
                    },
                    error: function (error) {
                        $("#loading").hide();
                        Notification('', 'Internal error occured, Please try again', 'danger');
                    }
                });
		});

        }

        function CalculateTotal() {
            var total = 0;
            var isChecked = false;
            $(".chkSelect").each(function ()
            {
                if ($(this).is(":checked")) {
                    total = total + parseFloat($(this).attr("data-total"));
                    isChecked = true;
                }
            });

            if (isChecked) {
                $("#amount-div").show();
                $(".total-amount").html(total);
            }
            else {
                $("#amount-div").hide();
            }

        }
    </script>
}

@if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
{
    <script>
        function RemvoeParticulars(id) {
            if (confirm("Are you sure you want to delete this particular?")) {
                $("#loading").show();
            $.ajax({
                url: '@Url.Action("RemoveInvoiceEntry", "Home")',
                dataType: "json",
                type: "GET",
                data: { id: id },
                success: function (response) {
                    $("#loading").hide();
                     Notification('', 'Particular deleted successfuly', 'success');
                    table.ajax.reload();
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Something went wrong, Please try again', 'danger');
                }
            });
            }
        }

        function AddUpdateInvoiceEntry(id,invoiceId) {
              $("#loading").show();
            $.ajax({
                url: '@Url.Action("AddInvoiceEntry", "Home")',
                dataType: "html",
                type: "GET",
                data: { id: id,invoiceId:invoiceId },
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#loading").hide();
                    $("#modelInvoiceEntry .modal-body").html(response);
                  $("#modelInvoiceEntry").modal('toggle');
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Internal error occured, Please try again', 'danger');
                }
            });
        }

        function AddUpdateInvoiceTracking(trackingId,invoiceId) {
              $("#loading").show();
            $.ajax({
                url: '@Url.Action("AddInvoiceTrackingInformation", "Home")',
                dataType: "html",
                type: "GET",
                data: { invoiceTrackingId: trackingId,invoiceId:invoiceId },
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#loading").hide();
                    $("#modalTracking .modal-body").html(response);
                  $("#modalTracking").modal('toggle');
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Internal error occured, Please try again', 'danger');
                }
            });
        }

        function RemvoeTracking(trackingId) {
            if (confirm("Are you sure you want to delete this log?")) {
                $("#loading").show();
            $.ajax({
                url: '@Url.Action("RemoveInvoiceTracking", "Home")',
                dataType: "json",
                type: "GET",
                data: { trackingId: trackingId },
                success: function (response) {
                    $("#loading").hide();
                     Notification('', 'Log deleted successfuly', 'success');
                    table.ajax.reload();
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Something went wrong, Please try again', 'danger');
                }
            });
            }
        }

        function GenerateSampleInvoice() {
            window.open("/home/SampleInvoiceCreateFile/");
        }

        function ImportInvoice() {
            $("#UploadErrors").html('');
            $("#UploadErrors").hide();
            $("#modelUploadFile").modal('toggle');
        }
    </script>
}

