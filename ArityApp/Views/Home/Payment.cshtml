@using Arity.Data.Helpers;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Payment";
}

<style>
    .date-filter .filter-date-button {
        width: 14%;
    }
</style>

<div class="breadcomb-area">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcomb-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="notika-icon notika-form"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    <h2>Receipt History</h2>
                                    <p></p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-3">
                            <div class="breadcomb-report">
                                @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                {
                                    <button id="btnAddInvoiceImport" onclick="ImportReceipt()" data-toggle="tooltip" data-placement="left" class="btn btn-default notika-btn-default waves-effect"><i class="fa fa-upload"></i> Import</button>
                                    <button id="btnAddInvoiceEntry" onclick="AddUpdatePaymentEntry(0)" data-toggle="tooltip" data-placement="left" class="btn"><i class="fa fa-plus"></i> Add</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
{
    <!-- Breadcrumb area End-->
<div class="modal animated fade" id="modelPaymentEntry" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-large">
        <div class="modal-content">
            <div class="modal-header" style="margin-bottom:35px;">
                <h3>Add/Update Receipt entry</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<div class="modal animated fade" id="modelUploadFile" role="dialog">
    <div class="modal-dialog modals-default">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Import Receipt </h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="alert alert-dismissible alert-model" style="display:none;width:100%;">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <h4><i class="icon fa notify-icon"></i> <span id="Alertmessage"></span> </h4>
                </div>
                <form action="@Url.Action("ImportReceipt", "Home")" class="dropzone dropzone-nk" id="dropzoneJsForm">
                    <div class="dz-message needsclick">
                        <i class="fa fa-cloud-upload" style="font-size:35px"></i><br />
                        <br />
                        <h4> Drop files here or click to upload.</h4>
                    </div>
                </form>
                <div style="width:60%;margin-left:30%;padding: 25px 0 5px;">
                    <div class="form-group">
                        <a href="/Content/SampleTemplate/ImportReceipt_Sample.xlsx" download="ImportReceiptSampleTemplate" id="downloadSample" style="display: inline-block;vertical-align:bottom;margin-left:10px;">Download sample template</a>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div style="width:100%;text-align:center;">
                    <button class="btn btn-primary" type="submit" id="btnFileUpload"><i class="fa fa-upload"></i> Import</button>
                </div>
            </div>
        </div>
    </div>
</div>
}
<!-- Data Table area Start-->
<div class="data-table-area">
    <div class="container">
        <div class="row">

            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="data-table-list">
                    <div class="basic-tb-hd">
                        <h2>Receipt History</h2>
                        <p>Below are receipt history.</p>
                        <p style="display:none;border:1px dashed #00c292;" id="amount-div">
                            <span style="display:block;"><b>Total Amount : <span class="total-amount"></span></b></span>
                            <span style="display:block;"><b>Total Discount : <span class="total-discount"></span></b></span>
                            <span style="display:block;"><b>Gross Amount : <span class="net-amount"></span></b></span>
                        </p>
                    </div>

                    <div class="date-filter">

                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>From</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="FromDate" class="form-control bk-date" value="@(((DateTime)ViewBag.FromDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>To</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="ToDate" class="form-control bk-date" value="@(((DateTime)ViewBag.ToDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                            <button type="button" class="btn btn-success notika-btn-success waves-effect" id="btnFilterGrid">Search</button>
                        </div>
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                            <button type="button" class="btn btn-success notika-btn-success waves-effect" onclick="downloadPDF()">Export PDF</button>
                        </div>
                        @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                        {
                            <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                                <button type="button" class="btn btn-success notika-btn-success waves-effect" onclick="downloadReciept()">Export Excel</button>
                            </div>
                        }

                    </div>
                    <div class="table-responsive">
                        <table id="tblPaymentHistory" class="table table-striped" style="width:100%;">
                            <thead>
                                <tr>
                                    <th style="width:5%;"><input type="checkbox" class="chkSelectAll" /></th>
                                    <th style="width:12%;">Invoice#</th>
                                    <th style="width:12%;">Receipt#</th>
                                    <th style="width:12%;">Client</th>
                                    <th style="width:12%;">Company</th>
                                    <th style="width:10%;">Discount</th>
                                    <th style="width:12%;">Total Amount</th>
                                    <th style="width:10%;">Date</th>
                                    <th style="width:10%;">Bank Name</th>
                                    <th style="width:10%;">Cheque#</th>
                                    <th style="width:10%;">Group</th>
                                    <th style="width:10%;">Added by</th>
                                    <th style="width:9%;">Status</th>
                                    <th style="width:9%;">Remarks</th>
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        <th style="width:9%;"></th>
                                        <th style="width:9%;"></th>
                                    }
                                </tr>
                            </thead>
                            <tbody></tbody>
                            <tfoot>
                                <tr>
                                    <th style="width:5%;" no-serach><input type="checkbox" class="chkSelectAll" /></th>
                                    <th style="width:12%;">Invoice#</th>
                                    <th style="width:12%;">Receipt#</th>
                                    <th style="width:12%;">Client</th>
                                    <th style="width:12%;">Company</th>
                                    <th style="width:10%;">Discount</th>
                                    <th style="width:12%;">Total Amount</th>
                                    <th style="width:10%;">Date</th>
                                    <th style="width:10%;">Bank Name</th>
                                    <th style="width:10%;">Cheque#</th>
                                    <th style="width:10%;">Group</th>
                                    <th style="width:10%;">Added by</th>
                                    <th style="width:9%;">Status</th>
                                    <th style="width:9%;">Remarks</th>
                                    @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                                    {
                                        <th style="width:9%;" no-serach></th>
                                        <th style="width:9%;" no-serach></th>
                                    }
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function () {
        $("#liReceipt").addClass("active");
        $("#liHome").removeClass("active");
        $('#tblPaymentHistory tfoot th').each( function () {
            var title = $(this).text();
            $(this).html('<input type="text" style="display:' + ($(this).attr("no-serach") == undefined ? "inline-block" :"none") + '" placeholder="Search ' + title + '" />');
        });
        table = $('#tblPaymentHistory').DataTable({
            "ajax": function (data, callback, settings) {
                $.ajax({
                    url: '@Url.Action("LoadPaymentHistory","Home")',
                    type: "GET",
                    dataType: "json",
                    data: {
                        from: ""+$("#FromDate").val()+"",
                        to: ""+$("#ToDate").val()+""
                    },
                    beforeSend: function (xhrObj) {
                        $("#loading").show();
                    }
                })
                    .done(function (data, textStatus, jqXHR) {
                        callback(data);
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        Notification('Error! ', '' + errorThrown + '', 'danger');
                    })
                    .always(function (data, textStatus, jqXHR) {
                        $("#loading").hide();
                    });
            },
            "language": {
                "emptyTable": "No receipts found"
            },
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            dom: 'Blfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        title: 'Excel',
                        text:'Export to excel'
                    }
                ],
            "columns": [
                {
                    "orderable": false,
                    "data": null,
                    "render": function (data, type, full) {
                        return '<input type="checkbox" class="chkSelect" data-id="'+data.ReceiptId+'" data-total="'+data.TotalAmount+'" data-discount="'+data.Discount+'" data-toggle="tooltip" \>';
                    }
               },
                { "data": "InvoiceNumbers" },
                { "data": "RecieptNo" },
                { "data": "ClientName" },
                { "data": "CompanyName" },
                { "data": "Discount" },
                { "data": "TotalAmount" },
                { "data": "CreatedDateString" },
                { "data": "BankName" },
                { "data": "ChequeNumber" },
                { "data": "GroupName" },
                { "data": "AddedBy" },
                {
                    "orderable": false,
                    "data": null,
                    "render": function (data, type, full) {
                        if (data.Status)
                            return 'TRUE';
                        else
                            return 'FALSE';
                    }
                },
                { "data": "Remarks" },
                @if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
                {
                    @:{
                    @:    "orderable": false,
                    @:    "data": null,
                    @:    "render": function (data, type, full) {
                    @:           if (data.CreatedBy == @Convert.ToInt32(SessionHelper.UserTypeId) || @Convert.ToInt32(SessionHelper.UserTypeId) == @((int)Arity.Service.Core.UserType.MasterAdmin) ) { return '<button class="btn waves-effect" onclick="AddUpdatePaymentEntry(' + data.ReceiptId + ')"><i class="fa fa-edit" aria-hidden="true"></i></button>'; }
                    @:           else { return '';}
                    @:    }
                    @:},
                    @:{
                    @:"orderable": false,
                    @:"data": null,
                    @:"render": function (data, type, full) {
                    @:    if (data.CreatedBy == @Convert.ToInt32(SessionHelper.UserTypeId) || @Convert.ToInt32(SessionHelper.UserTypeId) == @((int)Arity.Service.Core.UserType.MasterAdmin) ) { return '<div class="dialog-pro dialog">' +
                    @:                    '<button class="btn btn-info" onclick="DeleteReceipt(' + data.ReceiptId + ')" id="sa-warning">'+
                    @:                    '<i class="fa fa-trash" aria-hidden="true"></i>' +
                    @:                    '</button> </div>'; }
                    @:    else { return ''; }
                    @:      }
                    @:}
                    }
            ],
            "order": [[5, "desc"]],
            initComplete: function () {
                // Apply the search
                this.api().columns().every( function () {
                    var that = this;
 
                    $('input', this.footer()).on('keyup change clear', function () {
                        if ( that.search() !== this.value ) {
                            that
                                .search( this.value )
                                .draw();
                        }
                        });
                });
            }
        });

        Dropzone.options.dropzoneJsForm = {
            autoProcessQueue: false,
            acceptedFiles: ".xlsx,.xls",
            maxFiles: 1,
            parallelUploads: 1,
            maxFilesize: 25,
            addRemoveLinks: true,
            timeout: 180000,
            init: function () {
                var submitButton = document.querySelector("#btnFileUpload");
                var myDropzone = this; //closure
                this.on("maxfilesexceeded", function (file) {
                     Notification('', 'You can only upload single file at a time', 'danger');
                    this.removeFile(file);
                });
                this.on("error", function (file, message, xhr) {
                    if (message === "You can't upload files of this type.") {
                        Notification('', 'You can import .xls and .xlsx files only', 'danger');
                        this.removeFile(file);
                    }
                });
                this.on("sending", function (file, xhr, formData) {
                    formData.append("TemplateId", $("#TemplateId").val());
                    $("#loading").show();
                });
                this.on("complete", function (file) {
                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                        if (file.status == 'error') { }
                        else if (file.xhr.response != null && file.xhr.response === "error") {
                            Notification('', 'An error occurred while importing receipts. Please try again', 'danger');
                            this.removeFile(file);
                        }
                        else if (file.xhr.response != null && file.xhr.response === "template_id_null") {
                            Notification('', 'Please select template", "alert-danger', 'danger');
                        }
                        else {
                            Notification('', 'File imported successfully!', 'success');
                            this.removeFile(file);
                             table.ajax.reload();
                        }
                        $("#loading").hide();
                    }
                });
                submitButton.addEventListener("click", function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    var isValid = true;
                    if (myDropzone.getUploadingFiles().length === 0 && myDropzone.getQueuedFiles().length === 0) {
                        isValid = false;
                         Notification('', 'Please select file', 'danger');
                    }
                    if (isValid) {
                        myDropzone.processQueue();
                    }
                });
            }
        };

         $("#btnFilterGrid").click(function () {
                table.ajax.reload();
         });

         $(".chkSelectAll").change(function () {

            $(".chkSelect").each(function ()
            {
                $(this).prop("checked",$(".chkSelectAll").is(":checked"));
            });
            CalculateTotal();
         });

        $("body").on("change",".chkSelect",function () {
            CalculateTotal();
        });
        });
        function CalculateTotal() {
            var total = 0;
            var discounts = 0;
            var isChecked = false;
            $(".chkSelect").each(function ()
            {
                if ($(this).is(":checked")) {
                    total = total + parseFloat($(this).attr("data-total"));
                    discounts = discounts + parseFloat($(this).attr("data-discount"));
                    isChecked = true;
                }
            });

            if (isChecked) {
                $("#amount-div").show();
                $(".total-amount").html(total);
                $(".total-discount").html(discounts);
                $(".net-amount").html(total - discounts);
            }
            else {
                $("#amount-div").hide();
            }

        }

        function downloadReciept() {
             var recieptIds = "";
            $(".chkSelect").each(function () {
                if ($(this).is(":checked")) {
                    recieptIds = recieptIds + $(this).attr("data-id") + ",";
                }
            });
            if (recieptIds === "") {
                Notification('', 'Please select atleast one receipt', 'danger');
                return;
            }
            window.open("/home/GenerateReciept/"+recieptIds);
        }

        function downloadPDF() {
            var recieptIds = "";
            $(".chkSelect").each(function () {
                if ($(this).is(":checked")) {
                    recieptIds = recieptIds + $(this).attr("data-id") + ",";
                }
            });
            if (recieptIds === "") {
                Notification('', 'Please select atleast one receipt', 'danger');
                return;
            }
                window.open("/home/GenerateReceiptPDF/" + recieptIds);
        }
    </script>
}

@if (Convert.ToInt32(SessionHelper.UserTypeId) != (int)Arity.Service.Core.UserType.User)
{
    <script>
        function AddUpdatePaymentEntry(id) {
              $("#loading").show();
            $.ajax({
                url: '@Url.Action("AddPaymentEntry", "Home")',
                dataType: "html",
                type: "GET",
                data: { id: id },
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#loading").hide();
                    $("#modelPaymentEntry .modal-body").html(response);
                  $("#modelPaymentEntry").modal('toggle');
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Something went wrong, Please try again', 'danger');
                }
            });
        }

         function DeleteReceipt(ReceiptId) {
            swal({
			title: "Are you sure?",
			text: "You will not be able to recover this receipt",
			type: "warning",
			showCancelButton: true,
			confirmButtonText: "Delete",
            }).then(function () {
                $("#loading").show();
                $.ajax({
                    url: '@Url.Action("DeleteReceipt", "Home")',
                    type: "POST",
                    data: { receiptId: ReceiptId },
                    cache: false,
                    success: function (response) {
                        table.ajax.reload();
                        $("#loading").hide();
			            swal("Deleted!", "Your Receipt has been deleted.", "success");
                    },
                    error: function (error) {
                        $("#loading").hide();
                        Notification('', 'Internal error occured, Please try again', 'danger');
                    }
                });
		});

        }
         function ImportReceipt() {
             $("#modelUploadFile").modal('toggle');
        }
    </script>
}