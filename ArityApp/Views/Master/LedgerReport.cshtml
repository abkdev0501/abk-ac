@using Arity.Data.Helpers;
@using Arity.Data.Dto;
@model LedgerReportDto
@{
    ViewBag.Title = "LedgerReport";
}

<div class="breadcomb-area">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcomb-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="notika-icon notika-form"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    <h2>Ledger Report</h2>
                                    <p>Generate Ledger reports</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-3">
                            <div class="breadcomb-report">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="container">
    <div class="row">

        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="form-example-wrap mg-t-30">
                <div class="cmp-tb-hd cmp-int-hd">
                    <h2>Generate ledger Report</h2>
                </div>
                <div class="row">

                    <div class="col-lg-5 col-md-3 col-sm-3 col-xs-12">
                        <div class="form-group nk-datapk-ctm form-elet-mg">
                            <label>client</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                @Html.DropDownListFor(_ => _.UserId, ViewBag.Clients as SelectList, "-- Select Client--", new { @class = "form-control selectpicker", @required = "required" })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>From</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="FromDate" class="form-control bk-date" value="@(((DateTime)ViewBag.FromDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date" id="data_1">
                            <label>To</label>
                            <div class="input-group date nk-int-st">
                                <span class="input-group-addon"></span>
                                <input type="text" id="ToDate" class="form-control bk-date" value="@(((DateTime)ViewBag.ToDate).ToString("dd/MM/yyyy"))" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-1 col-md-3 col-sm-3 col-xs-12">
                        <div class="form-group nk-datapk-ctm form-elet-mg filter-date-button" id="data_1">
                            <button type="button" class="btn btn-success notika-btn-success waves-effect" id="btnExportLedgerReport" onclick="ExportLedgerReport()">Export report</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

    $(document).ready(function () {
        $(".selectpicker").selectpicker({
            liveSearch: true,
            ShowSubtext: true
        });
    });

        function ExportLedgerReport() {
            var to = $("#ToDate").val();
            var user = $("#UserId").val();
            var from = $("#FromDate").val();
            @*
            @if (Model != null) {
                var url = Url.Action("ExportLedgerReport", "Master",new {client = Model.UserId, from = Model.FromDate ,to = Model.ToDate});
            }
            window.open(url);*@

            var url = '@Url.Action("ExportLedgerReport", "Master")' + '?client=' + user + '&from=' + from + '&to=' + to;
            window.open(url);
                @*$.ajax({
                url: "@Url.Action("ExportLedgerReport", "Master")",
                data: JSON.stringify({ client: $("#UserId").val(), from: $("#FromDate").val(), to: $("#ToDate").val() }),
                    type: "POST",
                    async: true,
                    traditional: true,
                    cache: false,
                success: function (response) {
                    $("#loading").hide();
                    Notification('', 'Ledger Report Exported', 'success');
                },
                error: function (error) {
                    $("#loading").hide();
                    Notification('', 'Something went wrong, Please try again', 'danger');
                }
            });*@
        }

    </script>
}